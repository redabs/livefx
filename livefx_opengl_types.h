#ifndef LIVEFX_OPENGL_TYPES_H
#define LIVEFX_OPENGL_TYPES_H
typedef void APIENTRY gl_bind_vertex_array(GLuint array);
typedef void APIENTRY gl_bind_sampler(GLint n, GLuint sampler);
typedef void APIENTRY gl_gen_samplers(GLint n, GLuint *bufs);
typedef void APIENTRY gl_get_buffer_parameter_iv(GLenum target, GLenum value, GLint *data);
typedef void APIENTRY gl_delete_buffers(GLsizei n, const GLuint *bufs);
typedef void APIENTRY gl_draw_buffers(GLuint n, const GLenum *bufs);
typedef void APIENTRY gl_bind_attrib_location(GLuint program, GLuint index, const GLchar *name);
typedef GLint APIENTRY gl_get_attrib_location(GLuint program, const GLchar *name);
typedef GLint APIENTRY gl_get_uniform_location(GLuint program, const GLchar *name);
typedef void APIENTRY gl_uniform_matrix_4fv(GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);
typedef void APIENTRY gl_uniform_4fv(GLint location, GLsizei count, const GLfloat *value);
typedef void APIENTRY gl_uniform_4f(GLint location, GLfloat v0, GLfloat v1, GLfloat v2, GLfloat v3);
typedef void APIENTRY gl_uniform_3f(GLint location, GLfloat v0, GLfloat v1, GLfloat v2);
typedef void APIENTRY gl_uniform_2f(GLint location, GLfloat v0, GLfloat v1);
typedef void APIENTRY gl_uniform_1f(GLint location, GLfloat v0);
typedef void APIENTRY gl_uniform_1i(GLint location, GLint v0);
typedef void APIENTRY gl_uniform_1ui(GLint location, GLuint v0);
typedef void APIENTRY gl_get_uniform_uiv(GLuint program, GLint location, GLuint *params);
typedef GLenum APIENTRY gl_check_framebuffer_status(GLenum target);
typedef GLenum APIENTRY gl_get_error(void);
typedef void APIENTRY gl_framebuffer_renderbuffer(GLenum target, GLenum attachment, GLenum renderbuffertarget, GLuint renderbuffer);
typedef void APIENTRY gl_gen_framebuffers(GLsizei n, GLuint *ids);
typedef void APIENTRY gl_framebuffer_texture_2d(GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level);
typedef void APIENTRY gl_gen_renderbuffers(GLsizei n, GLuint *renderbuffers);
typedef void APIENTRY gl_renderbuffer_storage(GLenum target, GLenum internalformat, GLsizei width, GLsizei height);
typedef void APIENTRY gl_bind_renderbuffer(GLenum target, GLuint renderbuffer);
typedef void APIENTRY gl_bind_framebuffer(GLenum target, GLuint framebuffer);
//typedef void APIENTRY gl_active_texture(GLenum texture);
typedef void APIENTRY gl_vertex_attrib_pointer(GLuint index, GLint size, GLenum type, GLboolean normalized, GLsizei stride, const GLvoid * pointer);
typedef void APIENTRY gl_vertex_attrib_divisor(GLuint index, GLuint divisor);
typedef void APIENTRY gl_vertex_attrib_i_pointer(GLuint index, GLint size, GLenum type, GLsizei stride, const GLvoid * pointer);
typedef void APIENTRY gl_disable_vertex_attrib_array(GLuint index);
typedef void APIENTRY gl_enable_vertex_attrib_array(GLuint index);
typedef void APIENTRY gl_buffer_sub_data(GLenum target, GLintptr offset, GLsizeiptr size, const GLvoid *data);
typedef void APIENTRY gl_buffer_data(GLenum target, GLsizeiptr size, const GLvoid *data, GLenum usage);
typedef void APIENTRY gl_bind_buffer(GLenum target, GLuint buffer);
typedef void APIENTRY gl_gen_vertex_arrays(GLsizei n, GLuint *arrays);
typedef void APIENTRY gl_gen_buffers(GLsizei n, GLuint *buffers);
typedef void APIENTRY gl_use_program(GLuint program);
typedef void APIENTRY gl_shader_source(GLuint shader, GLsizei count, const GLchar **string, const GLint *length);
typedef void APIENTRY gl_get_program_iv(GLuint program, GLenum pname, GLint *params);
typedef void APIENTRY gl_get_program_info_log(GLuint program, GLsizei maxLength, GLsizei *length, GLchar *infoLog);
typedef void APIENTRY gl_get_shader_info_log(GLuint shader, GLsizei maxLength, GLsizei *length, GLchar *infoLog);
typedef void APIENTRY gl_get_shader_iv(GLuint shader, GLenum pname, GLint *params);
typedef void APIENTRY gl_compile_shader(GLuint shader);
typedef void APIENTRY gl_link_program(GLuint program);
typedef void APIENTRY gl_detach_shader(GLuint program, GLuint shader);
typedef void APIENTRY gl_attach_shader(GLuint program, GLuint shader);
typedef void APIENTRY gl_primitive_restart_index(GLuint index);
typedef void APIENTRY gl_draw_elements_instanced(GLenum mode, GLsizei count, GLenum type, const void *indices, GLsizei primcount);
typedef GLuint APIENTRY gl_create_shader(GLenum type);
typedef GLuint APIENTRY gl_create_program(void);
typedef void APIENTRY gl_delete_shader(GLuint shader);
typedef void APIENTRY gl_delete_program(GLuint program);
typedef const GLubyte *APIENTRY gl_get_string_i(GLenum name, GLuint index);

#endif 
